# Configure logging
#log syslog { debug, trace, info, remote, warning, error, auth, fatal, bug };
#log stderr all;
log "/var/log/bird.log" all;

# Override router ID
router id 10.0.255.1;
define myas = 65501;

timeformat route iso long;
timeformat protocol iso long;

# Turn on global debugging of all protocols
#debug protocols all;

# Set debugging only to connection state changes and other events
debug protocols { states, events };
debug commands 2;

# Turn on internal watchdog
#watchdog warning 5 s;
#watchdog timeout 30 s;

# The direct protocol automatically generates device routes to
# all network interfaces. Can exist in as many instances as you wish
# if you want to populate multiple routing tables with device routes.
protocol direct {
#       interface "-eth*", "*"; # Restrict network interfaces it works with
        export all;
}

# This pseudo-protocol performs synchronization between BIRD's routing
# tables and the kernel. If your kernel supports multiple routing tables
# (as Linux 2.2.x does), you can run multiple instances of the kernel
# protocol and synchronize different kernel tables with different BIRD tables.
protocol kernel {
        learn;                  # Learn all alien routes from the kernel
        persist;                # Don't remove routes on bird shutdown
        scan time 10;           # Scan kernel routing table every 20 seconds
        import all;             # Default is import all
        export all;             # Default is export none
#       kernel table 5;         # Kernel table to synchronize with (default: main)
        debug { states, interfaces, routes };
}

# This pseudo-protocol watches all interface up/down events.
protocol device {
        scan time 10;           # Scan interfaces every 10 seconds
        debug { states, interfaces, routes };
}

# Static routes (again, there can be multiple instances, so that you
# can disable/enable various groups of static routes on the fly).
protocol static {
        disabled;               # Disable by default
        preference 1000;        # Default preference of routes
#       table testable;         # Connect to a non-default table
#       debug { states, routes, filters, interfaces, events, packets };
#       debug all;
#       route 10.0.0.0/8 unreachable;
#       route 10.1.3.0:255.255.255.0 via 198.51.100.4;
#       route 10.2.0.0/24 via "eth0";
}

include "/etc/bird/bgp-filters.conf";
include "/etc/bird/bgp-peers.conf";
